export default Select;
type Select = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<$$ComponentProps>): void;
};
declare const Select: import("svelte").Component<{
    prependSnippet: unknown;
    listSnippet: unknown;
    listAppendSnippet: unknown;
    listPrependSnippet: unknown;
    loadingIconSnippet: unknown;
    itemSnippet: unknown;
    selectionSnippet: unknown;
    emptySnippet: unknown;
    clearIconSnippet: unknown;
    multiClearIconSnippet: unknown;
    chevronIconSnippet: unknown;
    inputHiddenSnippet: unknown;
    requiredSnippet: unknown;
    justValue?: unknown;
    useJustValue?: boolean;
    filter?: typeof _filter;
    getItems?: typeof _getItems;
    id?: unknown;
    name?: unknown;
    container?: unknown;
    input?: unknown;
    multiple?: boolean;
    multiFullItemClearable?: boolean;
    disabled?: boolean;
    focused?: boolean;
    value?: unknown;
    filterText?: string;
    placeholder?: string;
    placeholderAlwaysShow?: boolean;
    items?: unknown;
    label?: string;
    itemFilter?: Function;
    groupBy?: unknown;
    groupFilter?: Function;
    groupHeaderSelectable?: boolean;
    itemId?: string;
    loadOptions?: unknown;
    containerStyles?: string;
    hasError?: boolean;
    filterSelectedItems?: boolean;
    required?: boolean;
    closeListOnChange?: boolean;
    clearFilterTextOnBlur?: boolean;
    createGroupHeaderItem?: Function;
    getFilteredItems?: Function;
    searchable?: boolean;
    inputStyles?: string;
    clearable?: boolean;
    loading?: boolean;
    listOpen?: boolean;
    debounceWait?: number;
    hideEmptyState?: boolean;
    inputAttributes?: Record<string, unknown>;
    listAutoWidth?: boolean;
    showChevron?: boolean;
    listOffset?: number;
    hoverItemIndex?: number;
    floatingConfig?: Record<string, unknown>;
    debounce?: Function;
    ariaValues?: Function;
    ariaListOpen?: Function;
    ariaFocused?: Function;
    handleClear?: Function;
    onInput: unknown;
    onFilter: unknown;
    onClear: unknown;
    onFocus: unknown;
    onChange: unknown;
    onSelect: unknown;
    onBlur: unknown;
    onHoverItem: unknown;
} & Record<string, unknown>, {}, "">;
type $$ComponentProps = {
    prependSnippet: unknown;
    listSnippet: unknown;
    listAppendSnippet: unknown;
    listPrependSnippet: unknown;
    loadingIconSnippet: unknown;
    itemSnippet: unknown;
    selectionSnippet: unknown;
    emptySnippet: unknown;
    clearIconSnippet: unknown;
    multiClearIconSnippet: unknown;
    chevronIconSnippet: unknown;
    inputHiddenSnippet: unknown;
    requiredSnippet: unknown;
    justValue?: unknown;
    useJustValue?: boolean;
    filter?: typeof _filter;
    getItems?: typeof _getItems;
    id?: unknown;
    name?: unknown;
    container?: unknown;
    input?: unknown;
    multiple?: boolean;
    multiFullItemClearable?: boolean;
    disabled?: boolean;
    focused?: boolean;
    value?: unknown;
    filterText?: string;
    placeholder?: string;
    placeholderAlwaysShow?: boolean;
    items?: unknown;
    label?: string;
    itemFilter?: Function;
    groupBy?: unknown;
    groupFilter?: Function;
    groupHeaderSelectable?: boolean;
    itemId?: string;
    loadOptions?: unknown;
    containerStyles?: string;
    hasError?: boolean;
    filterSelectedItems?: boolean;
    required?: boolean;
    closeListOnChange?: boolean;
    clearFilterTextOnBlur?: boolean;
    createGroupHeaderItem?: Function;
    getFilteredItems?: Function;
    searchable?: boolean;
    inputStyles?: string;
    clearable?: boolean;
    loading?: boolean;
    listOpen?: boolean;
    debounceWait?: number;
    hideEmptyState?: boolean;
    inputAttributes?: Record<string, unknown>;
    listAutoWidth?: boolean;
    showChevron?: boolean;
    listOffset?: number;
    hoverItemIndex?: number;
    floatingConfig?: Record<string, unknown>;
    debounce?: Function;
    ariaValues?: Function;
    ariaListOpen?: Function;
    ariaFocused?: Function;
    handleClear?: Function;
    onInput: unknown;
    onFilter: unknown;
    onClear: unknown;
    onFocus: unknown;
    onChange: unknown;
    onSelect: unknown;
    onBlur: unknown;
    onHoverItem: unknown;
} & Record<string, unknown>;
import _filter from './filter';
import _getItems from './get-items';
